openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger deposit management
  description: A sample API of "deposit management system"
  termsOfService: http://swagger.io/terms/
  contact:
    name: Stella
    email: s.b.nagirner@gmail.com
    url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://depositsystem.swagger.io/api
paths:
  /deposits:
    get:
      description: |
        Returns all deposits from the system that the user has access to
      operationId: findDeposits
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: deposit response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/main/OpenApi/Deposit'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/main/OpenApi/Error'
    post:
      description: Creates a new deposit
      operationId: addDeposit
      requestBody:
        description: Deposit to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/main/OpenApi/NewDeposit'
      responses:
        '200':
          description: deposit response
          content:
            application/json:
              schema:
                $ref: '#/main/OpenApi/Deposit'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/main/OpenApi/Error'
    put:
      description: ""
      parameters: []
      responses:
        "200":
          description: "OK"
  /deposits/{id}:
    get:
      description: Returns a user based on a single ID, if the user does not have access to the deposit
      operationId: find deposit by id
      parameters:
        - name: id
          in: path
          description: ID of deposit to fetch
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: deposit response
          content:
            application/json:
              schema:
                $ref: '#/main/OpenApi/Deposit'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/main/OpenApi/Error'
    delete:
      description: deletes a single deposit based on the ID supplied
      operationId: deleteDeposit
      parameters:
        - name: id
          in: path
          description: ID of deposit to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: deposit deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/main/OpenApi/Error'
components:
  schemas:
    Deposit:
      allOf:
        - $ref: '#/main/OpenApi/NewDeposit'
        - type: object
          required:
            - id
          properties:
            id:
              type: integer
              format: int64

    NewDeposit:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        tag:
          type: string

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string